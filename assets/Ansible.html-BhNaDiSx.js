import{_ as a,c as i,f as s,o as n}from"./app-6qZbiVGh.js";const l="/images/auto_ans_1.png",o="/images/auto_ans_2.png",r="/images/auto_ans_3.png",d="/images/auto_ans_4.png",t="/images/auto_ans_5.png",h="/images/auto_ans_6.png",p="/images/auto_ans_7.png",m={};function u(c,e){return n(),i("div",null,e[0]||(e[0]=[s(`<h1 id="ansible" tabindex="-1"><a class="header-anchor" href="#ansible"><span>Ansible</span></a></h1><h2 id="ansible-overview" tabindex="-1"><a class="header-anchor" href="#ansible-overview"><span>Ansible Overview</span></a></h2><p>In this section, we will use Ansible to create a VM, make some modifications to that VM and then destroy that VM. Please be sure to follow along closely as we make changes. Note this is NOT a demonstration or deep dive into Ansible, but an overview showing how easy it is to integrate Ansible with Nutanix AHV.</p><h2 id="create-a-vm" tabindex="-1"><a class="header-anchor" href="#create-a-vm"><span>Create a VM</span></a></h2><ol><li><p>In your Admin VM, select the autolab/labs/ansible directory. This directory contains four ansible playbooks that we will be work with, one to create a vm, one to update a vm, one to delete a vm, and one to call a Nutanix Playbook via the Rest API</p></li><li><p>In your Terminal cd into the autolab/labs/ansible directory</p></li></ol><div class="language-bash line-numbers-mode" data-highlighter="prismjs" data-ext="sh" data-title="sh"><pre><code><span class="line"><span class="token builtin class-name">cd</span> ~/autolab/lab/ansible</span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><ol start="3"><li><p>Update the create_vm.yml file. Providing the IP address for Prism Central, appropriate Username and Password. Also you will want to update the name of the VM to be deployed.</p><p><img src="`+l+`" alt="Login Page"></p></li><li><p>In the terminal execute the playbook, be sure that you are in the autolab/lab/ansible directory. You will see the VM definition is created and the response output from the cluster.</p></li></ol><div class="language-bash line-numbers-mode" data-highlighter="prismjs" data-ext="sh" data-title="sh"><pre><code><span class="line">ansible-playbook create_vm.yml</span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><p><img src="`+o+'" alt="Login Page"></p><p><img src="'+r+'" alt="Login Page"></p><p>You can also confirm in Prism Central that the VM has been created. Note the number of vCPUs attached to this VM.</p><p><img src="'+d+'" alt="Login Page"></p><h2 id="update-a-vm" tabindex="-1"><a class="header-anchor" href="#update-a-vm"><span>Update a VM</span></a></h2><p>Unlike Terraform, Ansible doesn&#39;t manage the &quot;state&quot; of the deployment and relies on inventory and live queries of the system to manage the environment. So when we make an Update we must define what we are actually updating. This also means you will often have Playbooks that define individual actions to be performed on groups of systems. In general Ansible is great for configuration management, whereas Terraform is better for infrastructure deployment. They are often used in tandem.</p><ol><li><p>Select the &quot;update_vm.yml&quot; playbook in your admin VM, and update it with the Prism Central information as we have done in the create_vm.yml file and also update the VM name to match the VM you created previously.</p><p><img src="'+t+`" alt="Login Page"></p></li><li><p>In the terminal execute the playbook, you&#39;ll notice in the output that one of the steps is to identify the VM&#39;s uuid. This is the unique identifier that is used to make sure the change is made to the correct guest VM.</p></li></ol><div class="language-bash line-numbers-mode" data-highlighter="prismjs" data-ext="sh" data-title="sh"><pre><code><span class="line">ansible-playbook update_vm.yml</span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><p><img src="`+h+'" alt="Login Page"></p><p>After the update is completed, look at the VM in Prism Central and you should see that the vCPUs have now increased to 8.</p><p><img src="'+p+'" alt="Login Page"></p><h2 id="destroy-the-vm" tabindex="-1"><a class="header-anchor" href="#destroy-the-vm"><span>Destroy the VM</span></a></h2><ol><li><p>Who doesn&#39;t like some destruction! Select the &quot;delete_vm.yml&quot; playbook in your admin VM, and update it with the Prism Central information as we have done in the create_vm.yml file and also update the VM name to match the VM you created previously.</p><p><img src="'+t+`" alt="Login Page"></p></li></ol><p>If you scroll down in this file, you&#39;ll find that there really is only one action near the end, and that is to define the VM as &#39;absent&#39; This tells Ansible that it should destroy the object.</p><ol start="2"><li>In the terminal execute the playbook, you&#39;ll notice in the output that one of the steps is to identify the VM&#39;s uuid. This is the unique identifier that is used to make sure the change is made to the correct guest VM. Removing a VM is effectively an &quot;update&quot; to the VM, just changing it&#39;s state.</li></ol><div class="language-bash line-numbers-mode" data-highlighter="prismjs" data-ext="sh" data-title="sh"><pre><code><span class="line">ansible-playbook delete_vm.yml</span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><p>You should now see the VM no longer exists in Prism Central.</p>`,25)]))}const v=a(m,[["render",u],["__file","Ansible.html.vue"]]),g=JSON.parse('{"path":"/ansible_terra_ntnx_101/Ansible.html","title":"Ansible","lang":"en-US","frontmatter":{},"headers":[{"level":2,"title":"Ansible Overview","slug":"ansible-overview","link":"#ansible-overview","children":[]},{"level":2,"title":"Create a VM","slug":"create-a-vm","link":"#create-a-vm","children":[]},{"level":2,"title":"Update a VM","slug":"update-a-vm","link":"#update-a-vm","children":[]},{"level":2,"title":"Destroy the VM","slug":"destroy-the-vm","link":"#destroy-the-vm","children":[]}],"git":{"updatedTime":1749141109000,"contributors":[{"name":"Kurt Telep","email":"ktelep@gmail.com","commits":1}]},"filePathRelative":"ansible_terra_ntnx_101/Ansible.md"}');export{v as comp,g as data};
